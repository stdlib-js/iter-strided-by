{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar DEFAULT_OFFSET = 0;\nvar DEFAULT_EAGER = false;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which steps according to a provided callback function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - stride function\n* @param {NonNegativeInteger} [offset=0] - offset\n* @param {boolean} [eager=false] - boolean indicating whether to eagerly advance the input iterator when provided a non-zero offset\n* @param {*} [thisArg] - stride function execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a boolean\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* function stride( v, i ) {\n*     return (i % 10)+1;\n* }\n*\n* var iter = iterStridedBy( arr, stride );\n*\n* var r = iter.next().value;\n* // returns 0\n*\n* r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction iterStridedBy( iterator, fcn, offset, eager, thisArg ) {\n\tvar stride;\n\tvar iter;\n\tvar bool;\n\tvar FLG;\n\tvar idx;\n\tvar ctx;\n\tvar ret;\n\tvar o;\n\tvar v;\n\tvar i;\n\tvar s;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( offset ) ) {\n\t\t\tidx = offset;\n\t\t} else {\n\t\t\tidx = DEFAULT_OFFSET;\n\t\t\tctx = offset;\n\t\t}\n\t\tbool = DEFAULT_EAGER;\n\t} else if ( arguments.length === 4 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( isBoolean( eager ) ) {\n\t\t\tbool = eager;\n\t\t} else {\n\t\t\tbool = DEFAULT_EAGER;\n\t\t\tctx = eager;\n\t\t}\n\t} else if ( arguments.length > 4 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( !isBoolean( eager ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a boolean. Value: `%s`.', eager ) );\n\t\t}\n\t\tbool = eager;\n\t\tctx = thisArg;\n\t} else {\n\t\tidx = DEFAULT_OFFSET;\n\t\tbool = DEFAULT_EAGER;\n\t}\n\tif ( bool ) {\n\t\tfor ( i = 0; i < idx; i++ ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\tret = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// NOTE: if we've successfully advanced the input iterator, `i` is currently equal to `idx` (i.e., the offset)\n\t\ti -= 1;\n\t} else {\n\t\ti = -1;\n\t}\n\ts = -1;\n\tstride = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\to = idx;\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} callback function must return a positive integer\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\tif ( ret ) {\n\t\t\t\tv = ret;\n\t\t\t\tret = null;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\twhile ( i < idx ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\ti += 1;\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\ts += 1;\n\t\tstride = fcn.call( ctx, v.value, i, s, stride );\n\t\tif ( !isPositiveInteger( stride ) ) {\n\t\t\tthrow new TypeError( format( 'invalid return value. Callback function must return a positive integer. Value: `%s`.', stride ) );\n\t\t}\n\t\tidx += stride;\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStridedBy( iterator[ iteratorSymbol ](), fcn, o, bool, ctx );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterStridedBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which steps according to a provided callback function.\n*\n* @module @stdlib/iter-strided-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n* var iterStridedBy = require( '@stdlib/iter-strided-by' );\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* function stride( v, i ) {\n*     return (i % 10)+1;\n* }\n*\n* var iter = iterStridedBy( arr, stride );\n*\n* var r = iter.next().value;\n* // returns 0\n*\n* r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterStridedBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterStridedBy;\n"],"names":["setReadOnly","require$$0","isNonNegativeInteger","require$$1","isPrimitive","isPositiveInteger","require$$2","isBoolean","require$$3","isFunction","require$$4","isIteratorLike","require$$5","iteratorSymbol","require$$6","format","require$$7","main","iterStridedBy","iterator","fcn","offset","eager","thisArg","stride","iter","bool","FLG","idx","ctx","ret","o","v","i","s","TypeError","arguments","length","next","done","end","factory","call","value","lib"],"mappings":";;0tBAsBA,IAAIA,EAAcC,EACdC,EAAuBC,EAAmDC,YAC1EC,EAAoBC,EAAgDF,YACpEG,EAAYC,EAAuCJ,YACnDK,EAAaC,EACbC,EAAiBC,EACjBC,EAAiBC,EACjBC,EAASC,EA6Mb,IAAAC,EA9JA,SAASC,EAAeC,EAAUC,EAAKC,EAAQC,EAAOC,GACrD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMvB,EAAgBQ,GACrB,MAAM,IAAIgB,UAAWpB,EAAQ,+FAAgGI,IAE9H,IAAMV,EAAYW,GACjB,MAAM,IAAIe,UAAWpB,EAAQ,qEAAsEK,IAEpG,GAA0B,IAArBgB,UAAUC,OACTnC,EAAsBmB,GAC1BO,EAAMP,GAENO,EAhEkB,EAiElBC,EAAMR,GAEPK,EAlEkB,WAmEZ,GAA0B,IAArBU,UAAUC,OAAe,CACpC,IAAMnC,EAAsBmB,GAC3B,MAAM,IAAIc,UAAWpB,EAAQ,+EAAgFM,IAE9GO,EAAMP,EACDd,EAAWe,GACfI,EAAOJ,GAEPI,EA3EiB,MA4EjBG,EAAMP,QAED,GAAKc,UAAUC,OAAS,EAAI,CAClC,IAAMnC,EAAsBmB,GAC3B,MAAM,IAAIc,UAAWpB,EAAQ,+EAAgFM,IAG9G,GADAO,EAAMP,GACAd,EAAWe,GAChB,MAAM,IAAIa,UAAWpB,EAAQ,oEAAqEO,IAEnGI,EAAOJ,EACPO,EAAMN,OAENK,EA1FmB,EA2FnBF,EA1FkB,MA4FnB,GAAKA,EAAO,CACX,IAAMO,EAAI,EAAGA,EAAIL,EAAKK,IAErB,IADAD,EAAIb,EAASmB,QACNC,KAAO,CACbZ,GAAM,EACNG,EAAME,EACN,MAIFC,GAAK,OAELA,GAAK,EAeN,OAbAC,GAAK,EACLV,EAAS,EAITxB,EADAyB,EAAO,GACY,OAAQa,GAC3BtC,EAAayB,EAAM,SAAUe,GAGxB3B,GAAkBJ,EAAYU,EAAUN,MAC5CkB,EAAIH,EACJ5B,EAAayB,EAAMZ,EAAgB4B,IAE7BhB,EASP,SAASa,IACR,IAAIN,EACJ,GAAKL,EACJ,OAAKG,GACJE,EAAIF,EACJA,EAAM,KACCE,GAED,CACNO,MAAQ,GAIV,IADAN,GAAK,EACGA,EAAIL,GAAM,CAEjB,IADAI,EAAIb,EAASmB,QACNC,KAEN,OADAZ,GAAM,EACC,CACNY,MAAQ,GAGVN,GAAK,EAGN,IADAD,EAAIb,EAASmB,QACNC,KAEN,OADAZ,GAAM,EACCK,EAIR,GAFAE,GAAK,EACLV,EAASJ,EAAIsB,KAAMb,EAAKG,EAAEW,MAAOV,EAAGC,EAAGV,IACjCnB,EAAmBmB,GACxB,MAAM,IAAIW,UAAWpB,EAAQ,uFAAwFS,IAGtH,OADAI,GAAOJ,EACAQ,EAUR,SAASQ,EAAKG,GAEb,OADAhB,GAAM,EACDS,UAAUC,OACP,CACNM,MAASA,EACTJ,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASE,IACR,OAAOvB,EAAeC,EAAUN,KAAoBO,EAAKW,EAAGL,EAAMG,KC3KpEe,EALoB3C"}